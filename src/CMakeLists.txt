# LOCATION:    ${SRC_DIR}/src
# DESTINATION: ${BIN_DIR}/bin
SET(GAME_LIB ${PROJECT_NAME}-game)
SET(ENGINE_LIB ${PROJECT_NAME}-engine)
SET(EXE_NAME ${PROJECT_NAME})

# Macro to add libs
MACRO(ADD_LIB LIB_NAME)
  FIND_PACKAGE(${LIB_NAME} REQUIRED)
  INCLUDE_DIRECTORIES(${${LIB_NAME}_INCLUDE_DIR})
  SET(LIBRARIES ${LIBRARIES} ${${LIB_NAME}_LIBRARY})
ENDMACRO(ADD_LIB)

# SFML
SET(SFML_STATIC_LIBRARIES TRUE CACHE BOOL "Use static libraries for SFML")
SET(SFML_FIND_VERSION_MAJOR 2)
SET(SFML_FIND_VERSION_MINOR 0)
FIND_PACKAGE(SFML COMPONENTS Audio Graphics Network Window System REQUIRED)
INCLUDE_DIRECTORIES(${SFML_INCLUDE_DIR})
SET(LIBRARIES ${LIBRARIES} ${SFML_LIBRARIES})

IF(SFML_STATIC_LIBRARIES)
  # The rest
  ADD_LIB(libconfig++)
  ADD_LIB(XRandR)
  ADD_LIB(FreeType)
  ADD_LIB(libjpeg)
  ADD_LIB(GLEW)
  ADD_LIB(OpenGL)
ENDIF(SFML_STATIC_LIBRARIES)

# Glob source files
FILE(GLOB GAME_SRCS *.cpp)
FILE(GLOB GAME_HDRS *.hpp)

# Compile engine
ADD_SUBDIRECTORY(engine)
SET(LIBRARIES ${ENGINE_LIB} ${LIBRARIES})

# Compile game
ADD_LIBRARY(${GAME_LIB} ${GAME_SRCS} ${GAME_HDRS})
SET(LIBRARIES ${GAME_LIB} ${LIBRARIES})

# Create and link the executable
ADD_EXECUTABLE(${EXE_NAME} main.cpp)
TARGET_LINK_LIBRARIES(${EXE_NAME} ${LIBRARIES})

INSTALL(TARGETS ${EXE_NAME} RUNTIME DESTINATION ${BIN_DIR}/${PROJECT_NAME})
